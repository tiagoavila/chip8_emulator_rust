use minifb::Key;

pub const CHIP8_RAM_MEMORY_SIZE: usize = 4096;
pub const CHIP8_STACK_MEMORY_SIZE: usize = 16;
pub const CHIP8_REGISTER_COUNT: usize = 16;

pub const SCREEN_WIDTH: usize = 64;
pub const SCREEN_HEIGHT: usize = 32;
pub const SCREEN_SCALE_FACTOR: usize = 10;
pub const START_RAM_ADDRESS: u16 = 0x200;
pub const CLEANED_SCREEN: [bool; SCREEN_WIDTH * SCREEN_HEIGHT] =
    [false; SCREEN_WIDTH * SCREEN_HEIGHT];

pub const FONT_SPRITES_SIZE: usize = 80;

pub const FONT_SPRITES: [u8; FONT_SPRITES_SIZE] = [
    0xF0, 0x90, 0x90, 0x90, 0xF0, // 0
    0x20, 0x60, 0x20, 0x20, 0x70, // 1
    0xF0, 0x10, 0xF0, 0x80, 0xF0, // 2
    0xF0, 0x10, 0xF0, 0x10, 0xF0, // 3
    0x90, 0x90, 0xF0, 0x10, 0x10, // 4
    0xF0, 0x80, 0xF0, 0x10, 0xF0, // 5
    0xF0, 0x80, 0xF0, 0x90, 0xF0, // 6
    0xF0, 0x10, 0x20, 0x40, 0x40, // 7
    0xF0, 0x90, 0xF0, 0x90, 0xF0, // 8
    0xF0, 0x90, 0xF0, 0x10, 0xF0, // 9
    0xF0, 0x90, 0xF0, 0x90, 0x90, // A
    0xE0, 0x90, 0xE0, 0x90, 0xE0, // B
    0xF0, 0x80, 0x80, 0x80, 0xF0, // C
    0xE0, 0x90, 0x90, 0x90, 0xE0, // D
    0xF0, 0x80, 0xF0, 0x80, 0xF0, // E
    0xF0, 0x80, 0xF0, 0x80, 0x80, // F
];

pub const KEYBOARD_KEYS_COUNT: usize = 16;

/// Mapping of physical keyboard keys to Chip-8 hexadecimal keypad codes.
/// Keyboard     ->     Chip-8 Keyboard
/// 1 2 3 4      ->     1 2 3 C
/// Q W E R      ->     4 5 6 D
/// A S D F      ->     7 8 9 E
/// Z X C V      ->     A 0 B F
pub const KEYBOARD_CODES: [(Key, u8); KEYBOARD_KEYS_COUNT] = [
    (Key::Key1, 0x1),
    (Key::Key2, 0x2),
    (Key::Key3, 0x3),
    (Key::Key4, 0xC),

    (Key::Q, 0x4),
    (Key::W, 0x5),
    (Key::E, 0x6),
    (Key::R, 0xD),

    (Key::A, 0x7),
    (Key::S, 0x8),
    (Key::D, 0x9),
    (Key::F, 0xE),

    (Key::Z, 0xA),
    (Key::X, 0x0),
    (Key::C, 0xB),
    (Key::V, 0xF)
];